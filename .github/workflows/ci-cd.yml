name: CI/CD Pipeline

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    # Backend Tests
    backend-tests:
        runs-on: ubuntu-latest
        services:
            redis:
                image: redis:latest
                ports:
                    - 6379:6379
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 18

            - name: Debug environment
              run: |
                  echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}"
                  echo "MONGO_URL=${{ secrets.MONGO_URL }}"
                  echo "REDIS_HOST=127.0.0.1"
                  echo "REDIS_PORT=6379"

            - name: Install dependencies
              working-directory: backend
              run: npm install

            - name: Run tests
              working-directory: backend
              env:
                  MONGO_URL: ${{ secrets.MONGO_URL }}
                  REDIS_HOST: 127.0.0.1
                  REDIS_PORT: 6379
                  JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
              run: npm test

    # Frontend Build and Deploy
    frontend-deploy:
        runs-on: ubuntu-latest
        needs: backend-tests
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 18

            - name: Install dependencies
              working-directory: frontend
              run: npm install

            - name: Build frontend
              working-directory: frontend
              run: npm run build

            - name: Deploy to Vercel
              working-directory: frontend
              env:
                  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
              run: npx vercel --prod --token $VERCEL_TOKEN --yes

    # Docker Build and Push
    docker-deploy:
        runs-on: ubuntu-latest
        needs: backend-tests
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Log in to Docker Hub
              run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

            - name: Build Docker image
              run: docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest ./backend

            - name: Verify Docker image
              run: docker images | grep ${{ secrets.DOCKER_USERNAME }}/backend

            - name: Push Docker image
              run: docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest
